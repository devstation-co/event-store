version: '3.3'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - infrastructure_network

  redis:
    image: 'docker.io/bitnami/redis:6.0-debian-10'
    command: redis-server /usr/local/etc/redis/redis.conf
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    env_file:
      - .env
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      ALLOW_EMPTY_PASSWORD: 'no'
      REDIS_DISABLE_COMMANDS: FLUSHDB,FLUSHALL
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - ./redis/volume:/var/lib/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - '6379:6379'

  nats:
    image: 'nats:latest'
    container_name: nats
    command:
      - '--user'
      - ${NATS_USERNAME}
      - '--pass'
      - ${NATS_PASSWORD}
    env_file:
      - .env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
      - infrastructure_network
    ports:
      - '4222:4222'
      - '6222:6222'
      - '8222:8222'

  mongodb:
    image: 'mongo'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - '27017:27017'
      - '27019:27019'
    networks:
      - infrastructure_network
    env_file:
      - .env
    volumes:
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongodb/volume:/bitnami/mongodb
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

  mongodb-express:
    image: mongo-express
    container_name: mongodb-express
    ports:
      - 8081:8081
    env_file:
      - .env
    networks:
      - infrastructure_network
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    depends_on:
      - mongodb

networks:
  infrastructure_network:
